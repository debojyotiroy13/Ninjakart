{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/seller.service.ts","webpack:///./src/app/views/admin/admin.component.css","webpack:///./src/app/views/admin/admin.component.html","webpack:///./src/app/views/admin/admin.component.ts","webpack:///./src/app/views/buyer/buyer.component.css","webpack:///./src/app/views/buyer/buyer.component.html","webpack:///./src/app/views/buyer/buyer.component.ts","webpack:///./src/app/views/buyer/cart.component.html","webpack:///./src/app/views/buyer/cart.component.ts","webpack:///./src/app/views/buyer/product.details.component.html","webpack:///./src/app/views/buyer/product.details.component.ts","webpack:///./src/app/views/login/login.component.css","webpack:///./src/app/views/login/login.component.html","webpack:///./src/app/views/login/login.component.ts","webpack:///./src/app/views/login/signup.component.html","webpack:///./src/app/views/login/signup.component.ts","webpack:///./src/app/views/seller/product.component.css","webpack:///./src/app/views/seller/product.component.html","webpack:///./src/app/views/seller/product.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductComponent } from './views/seller/product.component'\nimport { ListComponent } from './views/buyer/buyer.component'\nimport { AdminComponent } from './views/admin/admin.component'\nimport { LoginComponent } from './views/login/login.component'\nimport { SignupComponent } from './views/login/signup.component'\nimport { ProductDetailsComponent } from './views/buyer/product.details.component'\nimport { AuthGuard } from './auth.guard';\nimport { CartComponent } from './views/buyer/cart.component';\n\nconst routes: Routes = [\n  { path: 'sell', component: ProductComponent , canActivate:[]},\n  { path: 'cart', component: CartComponent , canActivate:[]},\n  { path: 'home', component: ListComponent },\n  { path: 'admin', component: AdminComponent , canActivate:[]},\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: SignupComponent },\n  { path: 'product/:id', component: ProductDetailsComponent },\n  { path: '**', component: LoginComponent }\n];\n\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, {useHash:true}) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule {}\n\n\n\n","module.exports = \".card{\\n    padding-top: 10px;\\n    padding-bottom: 10px;\\n}\\n.table{\\n    width:100%;\\n}\\n.matFormField{\\n    padding-right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmR7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59XG4udGFibGV7XG4gICAgd2lkdGg6MTAwJTtcbn1cbi5tYXRGb3JtRmllbGR7XG4gICAgcGFkZGluZy1yaWdodDogMjBweDtcbn0iXX0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span><i class=\\\"material-icons\\\" style=\\\"font-size: 35px;\\\" routerLink=\\\"/home\\\">shop</i></span>\\n    <span class=\\\"example-spacer\\\">NinjaKart</span>\\n    \\n    <button mat-button routerLink=\\\"/home\\\"><i class=\\\"material-icons\\\">home</i><span style=\\\"padding-left:5px;padding-top: 5px;\\\">Home</span></button>\\n    <button mat-button routerLink=\\\"/cart\\\" ><i class=\\\"material-icons\\\">shopping_basket</i><span style=\\\"padding-left:5px;padding-top: 5px;\\\">Cart</span></button>\\n    <!-- matBadge=\\\"8\\\" matBadgePosition=\\\"after\\\" matBadgeColor=\\\"accent\\\" -->\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\"><i class=\\\"material-icons\\\">menu</i></button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <button mat-menu-item routerLink=\\\"/login\\\">Login</button>\\n      <button mat-menu-item routerLink=\\\"/home\\\">Your Account</button>\\n      <button mat-menu-item routerLink=\\\"/home\\\">Your Orders</button>\\n      <button mat-menu-item routerLink=\\\"/admin\\\">Admin Dashboard</button>\\n      <button mat-menu-item routerLink=\\\"/sell\\\">Seller Dashboard</button>\\n      <button mat-menu-item (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</button>\\n    </mat-menu>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n<!-- <mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n      Copyright © Debojroy 2019\\n  </mat-toolbar-row>\\n</mat-toolbar> -->\"","import {Component} from '@angular/core';\nimport {Observable, throwError } from 'rxjs';\nimport {HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {MatSnackBar} from '@angular/material';\nimport {MatTableDataSource, PageEvent} from '@angular/material';\nimport { AuthService } from './services/auth.service';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  title = 'Facebook';\n  constructor(private authService: AuthService){}\n  \n  logout(){\n    console.log(\"Logging out!\")\n    this.authService.removeLoggedInState();\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductComponent } from './views/seller/product.component';\nimport { ListComponent } from './views/buyer/buyer.component';\nimport { AdminComponent } from './views/admin/admin.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { SignupComponent } from './views/login/signup.component'\nimport { ProductDetailsComponent } from './views/buyer/product.details.component'\n\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule} from '@angular/flex-layout';\nimport { HttpClientModule} from '@angular/common/http';\nimport { RestService} from './app.service';\nimport { AuthService} from './services/auth.service';\nimport { SellerService} from './services/seller.service';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartComponent } from './views/buyer/cart.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponent,\n    ListComponent,\n    AdminComponent,\n    LoginComponent,\n    SignupComponent,\n    ProductDetailsComponent,\n    CartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule\n  ],\n  providers: [RestService, AuthService, SellerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpParams, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class RestService {\n    private baseUrl = 'https://debojyotiroy13.pythonanywhere.com/';\n   //  private baseUrl = 'http://localhost:5000/';\n\n    constructor(private http: HttpClient) {} //this initialized the HttpClient which we use to do a post or get call\n\n   post(path:String, body:any){\n      return this.http.post(this.baseUrl  + path, body,\n         {headers: new HttpHeaders().set('Content-Type', 'application/json')});\n   }\n   get(path:String){\n      return this.http.get(this.baseUrl  + path,\n         {headers: new HttpHeaders().set('Content-Type', 'application/json')});\n   }\n   delete(path:String, id : String){\n      return this.http.delete(this.baseUrl  + path + '/' + id,\n         {headers: new HttpHeaders().set('Content-Type', 'application/json')});\n   }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatToolbarModule , MatInputModule, MatProgressSpinnerModule, MatCardModule, MatOptionModule} from '@angular/material';\nimport { MatSelectModule} from '@angular/material/select';\nimport { MatTableModule} from '@angular/material/table';\nimport { MatSnackBarModule} from '@angular/material/snack-bar';\nimport { MatIconModule} from '@angular/material/icon';\nimport { MatPaginatorModule} from '@angular/material/paginator';\nimport { MatSidenavModule} from '@angular/material/sidenav';\nimport { MatExpansionModule} from '@angular/material/expansion';\nimport { MatGridListModule} from '@angular/material/grid-list';\nimport { MatChipsModule} from '@angular/material/chips';\nimport { MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule} from '@angular/material';\nimport { MatMenuModule} from '@angular/material/menu';\nimport { MatBadgeModule} from '@angular/material/badge';\n\n@NgModule({\n  imports: [ MatBadgeModule, MatMenuModule, MatDatepickerModule, MatNativeDateModule, MatChipsModule, MatGridListModule, MatExpansionModule, MatSidenavModule, MatPaginatorModule, MatIconModule, MatSnackBarModule, MatTableModule, MatButtonModule, MatToolbarModule, MatInputModule, MatProgressSpinnerModule, MatCardModule, MatSelectModule],\n  exports: [ MatBadgeModule, MatMenuModule, MatDatepickerModule, MatNativeDateModule, MatChipsModule, MatGridListModule, MatExpansionModule, MatSidenavModule, MatPaginatorModule, MatIconModule, MatSnackBarModule, MatTableModule, MatButtonModule, MatToolbarModule, MatInputModule, MatProgressSpinnerModule, MatCardModule, MatSelectModule],\n})\nexport class MaterialModule { }","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n\n    //private loggedInState: boolean = false;\n\n    public setLoggedInState(state: any){\n        localStorage.setItem('token',state);\n    }\n\n    public removeLoggedInState(){\n        localStorage.removeItem('token');\n    }\n    \n    public getLoggedInState() {\n        return !!localStorage.getItem('token');\n    }\n\n    public getUserInfo() {\n        return localStorage.getItem('token');\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SellerService {\n    \n}","module.exports = \".card{\\n    padding-top: 10px;\\n    padding-bottom: 10px;\\n}\\n.table{\\n    width:100%;\\n}\\n.matFormField{\\n    padding-right: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xufVxuLnRhYmxle1xuICAgIHdpZHRoOjEwMCU7XG59XG4ubWF0Rm9ybUZpZWxke1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG59XG4iXX0= */\"","module.exports = \"<div style=\\\"background:#eee;\\\">\\n  <div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 card\\\">\\n    <mat-card>\\n        <div fxLayout=\\\"row\\\">\\n            <div fxFlex>\\n              <h4>Manage Categories</h4>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\">\\n            <div fxFlex>\\n                <mat-form-field class=\\\"matFormField\\\">\\n                  <input matInput [(ngModel)]=\\\"categoryName\\\" placeholder=\\\"Category Name\\\">\\n                </mat-form-field>\\n                <mat-form-field class=\\\"matFormField\\\">\\n                    <input matInput [(ngModel)]=\\\"categoryDescription\\\" placeholder=\\\"Category Description\\\">\\n                </mat-form-field>\\n                <span>\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"createCategory()\\\">ADD</button>\\n                    <!-- <button mat-raised-button color=\\\"accent\\\" (click)=\\\"getCategory()\\\">GET</button> -->\\n                </span>\\n            </div>\\n        </div>\\n\\n          <!-- <mat-card> -->\\n              <table mat-table [dataSource]=\\\"categoryDataSource\\\" class=\\\"mat-elevation-z8\\\" class=\\\"table\\\">\\n                <ng-container matColumnDef=\\\"id\\\">\\n                  <th mat-header-cell *matHeaderCellDef> No. </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n                </ng-container>\\n          \\n                <ng-container matColumnDef=\\\"name\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Name </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n                </ng-container>\\n              \\n                <ng-container matColumnDef=\\\"description\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Description </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n                </ng-container>\\n          \\n                <ng-container matColumnDef=\\\"action\\\">\\n                  <th mat-header-cell *matHeaderCellDef> </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                      <i class=\\\"material-icons\\\" style=\\\"cursor: pointer\\\" (click)=\\\"deleteCategory(element.id)\\\">delete</i>\\n                    <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"editProduct(element.id)\\\">EDIT</button>  -->\\n                    <!-- <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteCategory(element.id)\\\">DELETE</button>  -->\\n                  </td>\\n                </ng-container>\\n          \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedCategoriesColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedCategoriesColumns;\\\"></tr>\\n              </table>\\n              <mat-paginator [length]=\\\"tableLength\\\"\\n                      [pageSize]=\\\"tablePageSize\\\"\\n                      [pageSizeOptions]=\\\"tablePageSizeOptions\\\"\\n                      (page)=\\\"pageEvent = $event\\\">\\n                    </mat-paginator>\\n            <!-- </mat-card> -->\\n    </mat-card>\\n  </div>\\n  <div class=\\\"col-md-12 card\\\">\\n  <mat-card>\\n      <div fxLayout=\\\"row\\\">\\n          <div fxFlex>\\n            <h4>Manage Products</h4>\\n          </div>\\n      </div>\\n      <div fxLayout=\\\"row\\\">\\n          <div fxFlex>\\n              <mat-form-field class=\\\"matFormField\\\">\\n                <mat-select placeholder=\\\"Select Category\\\" name=\\\"Category\\\" [(ngModel)]=\\\"productCategory\\\">\\n                  <mat-option *ngFor=\\\"let cat of categoryDataSource\\\" [value]=\\\"cat\\\">{{cat.name}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field class=\\\"matFormField\\\">\\n                  <input matInput [(ngModel)]=\\\"productName\\\" placeholder=\\\"Product Name\\\">\\n                </mat-form-field>\\n              <mat-form-field class=\\\"matFormField\\\">\\n                  <input matInput [(ngModel)]=\\\"productDescription\\\" placeholder=\\\"Product Description\\\">\\n                </mat-form-field>\\n                <span>\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"createProduct()\\\">ADD</button>\\n                    <!-- <button mat-raised-button color=\\\"accent\\\" (click)=\\\"getProduct()\\\">GET</button> -->\\n                </span>\\n          </div>\\n      </div>\\n      <div fxLayout=\\\"row\\\">\\n          <div fxFlex>\\n            <!-- <h5>Products</h5> -->\\n            <span><mat-spinner [diameter]=\\\"20\\\" [strokeWidth]=\\\"2\\\" [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner></span>\\n          </div>\\n      </div>\\n      <!-- <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search All\\\">\\n      </mat-form-field> -->\\n\\n      <!-- <mat-card> -->\\n      <table mat-table [dataSource]=\\\"productDataSource\\\" class=\\\"mat-elevation-z8\\\" class=\\\"table\\\">\\n\\n        <ng-container matColumnDef=\\\"id\\\">\\n          <th mat-header-cell *matHeaderCellDef> No. </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n        </ng-container>\\n      \\n        <ng-container matColumnDef=\\\"category\\\">\\n          <th mat-header-cell *matHeaderCellDef> Category </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Name </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n        </ng-container>\\n      \\n        <ng-container matColumnDef=\\\"description\\\">\\n          <th mat-header-cell *matHeaderCellDef> Description </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"action\\\">\\n          <th mat-header-cell *matHeaderCellDef> </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            <i class=\\\"material-icons\\\" style=\\\"cursor: pointer\\\" (click)=\\\"deleteProduct(element.id)\\\">delete</i>\\n            <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"editProduct(element.id)\\\">EDIT</button>  -->\\n            <!-- <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteProduct(element.id)\\\">DELETE</button>  -->\\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedProdcutsColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedProdcutsColumns;\\\"></tr>\\n      </table>\\n      <mat-paginator [length]=\\\"tableLength\\\"\\n              [pageSize]=\\\"tablePageSize\\\"\\n              [pageSizeOptions]=\\\"tablePageSizeOptions\\\"\\n              (page)=\\\"pageEvent = $event\\\">\\n            </mat-paginator>\\n    <!-- </mat-card> -->\\n  </mat-card>\\n  </div>\\n</div>\\n</div>\\n  <!-- <div fxLayout=\\\"row\\\">\\n      <div fxFlex >\\n          <mat-form-field>\\n            <input matInput [(ngModel)]=\\\"tableLength\\\" placeholder=\\\"List length\\\">\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input matInput [(ngModel)]=\\\"tablePageSize\\\" placeholder=\\\"Page size\\\">\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input matInput [ngModel]=\\\"tablePageSizeOptions\\\" (ngModelChange)=\\\"setPageSizeOptions($event)\\\" placeholder=\\\"Page size options\\\">\\n          </mat-form-field>\\n      </div>\\n      <div fxFlex>\\n          <mat-paginator [length]=\\\"tableLength\\\"\\n            [pageSize]=\\\"tablePageSize\\\"\\n            [pageSizeOptions]=\\\"tablePageSizeOptions\\\"\\n            (page)=\\\"pageEvent = $event\\\">\\n          </mat-paginator>\\n      </div>\\n    </div>\\n  </div> -->\"","import {Component} from '@angular/core';\nimport {RestService} from '../../app.service';\nimport {Observable, throwError } from 'rxjs';\nimport {HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {MatSnackBar} from '@angular/material';\nimport {MatTableDataSource, PageEvent} from '@angular/material';\n\nexport interface PeriodicElement {\n  id: number,\n  name: string;\n  description: String;\n  price: number;\n  category: string;\n}\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n\n@Component({\n  selector: 'admin-root',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\n\n\nexport class AdminComponent {\n  title = 'Facebook';\n  answer: string = '';\n\n  /* Product Variables */\n  productName: string = '';\n  productDescription: string = '';\n  productPrice: number;\n  productCategory: any ;\n\n  /* Category Variables */\n  categoryName: string = '';\n  categoryDescription: string = '';\n  categoryDataSource: any = [];\n  \n\n  answerDisplay: string = '';\n  showSpinner: boolean = false;\n\n  /* Product Table Params */\n  displayedCategoriesColumns: string[] = ['name', 'description', 'action'];\n  displayedProdcutsColumns: string[] = [ 'category', 'name', 'description', 'action'];\n  productDataSource = new MatTableDataSource([]);\n  tableLength = 100;\n  tablePageSize = 10;\n  tablePageSizeOptions: number[] = [5, 10, 25, 100];\n  pageEvent: PageEvent;\n\n  constructor(private restService: RestService, private snackBar: MatSnackBar){\n    this.getProduct();\n    this.getCategory();\n  }\n\n  applyFilter(filterValue: string) {\n    this.productDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  changeCategory() {\n\n  }\n\n  getCategory() {\n    this.restService.get('categories').subscribe((data : any) => {\n      this.categoryDataSource = data;\n    }); \n  }\n\n  createCategory() {\n    let catg = {};\n    catg['name'] = this.categoryName;\n    catg['description'] = this.categoryDescription;\n    this.restService.post('categories',catg).subscribe((res: any) => {\n      if(res.status==='success'){\n        this.getCategory();\n      }else{\n        this.snackBar.open(res.message, 'ERROR', {\n          duration: 2000,\n        });\n      }\n    });\n  }\n\n  getProduct(){\n    this.restService.get('product').subscribe((data : any) => {\n      this.productDataSource = new MatTableDataSource(data);\n    }); \n  }\n\n  createProduct(){\n    let prod = {};\n    prod['name'] = this.productName;\n    prod['category_id'] = this.productCategory.id;\n    prod['description'] = this.productDescription;\n    this.restService.post('product',prod).subscribe((res: any) => {\n      if(res.status==='success'){\n        this.getProduct();\n        this.productName = \"\";\n        this.productCategory = \"\";\n        this.productDescription = \"\";\n        this.productPrice = null;\n      }else{\n        //this.productService.setToastMessage('Error Saving Product! : ' + res.message);\n        this.snackBar.open(res.message, 'ERROR', {\n          duration: 2000,\n        });\n      }\n    });\n  }\n  editProduct(id : String){\n    this.getProduct();\n  }\n  \n  deleteProduct(id : String){\n    this.restService.delete('product', id).subscribe((res: any) => {\n      this.getProduct();\n    });\n  }\n\n  deleteCategory(id : String){\n    this.restService.delete('categories', id).subscribe((res: any) => {\n      this.getCategory();\n    });\n  }\n\n  showAnswer() {\n    \n  }\n\n}","module.exports = \".card{\\n    padding-top: 10px;\\n    padding-bottom: 10px;\\n}\\n.table{\\n    width:100%;\\n}\\n.matFormField{\\n    padding-right: 20px;\\n}\\n.side-navbar {\\n    background: #eee;\\n}\\n.filter-panel{\\n    padding-top: 8px;\\n}\\n.search-card-box{\\n    margin-bottom: 10px;\\n    margin-top: 10px;\\n}\\n.search-product{\\n    font-size: x-large;\\n    color:#222;\\n}\\n.product-body{\\n    height: 300px;\\n}\\n.product-card {\\n    padding: 10px;\\n}\\n.product-card-header{\\n    margin-bottom: 20px;\\n    padding-left: 0;\\n    padding-right: 0;\\n    padding-top: 0px;\\n    padding-bottom: 2px;\\n}\\n.box{\\n    position: relative;\\n    display: inline-block; /* Make the width of box same as image */\\n    cursor: pointer;\\n    -o-object-fit: contain;\\n       object-fit: contain;\\n    height: 200px;\\n}\\n.box .text{\\n    height: 50%;\\n    position: absolute;\\n    z-index: 999;\\n    margin: 0 auto;\\n    left: 0;\\n    right: 0;\\n    padding-top: 15px;\\n    padding-left: 5px;\\n    top: 50%; /* Adjust this value to move the positioned div up and down */\\n    text-align: left;\\n    width: 100%; /* Set the width of the positioned div */\\n    font-weight: 400;\\n    background-image: linear-gradient(to bottom, rgba(255,255,255,0), rgba(0,0,0,0.7));\\n    color: #eee;\\n}\\n.box .text .large-text{\\n    font-size: 25px;\\n}\\n.box-image{\\n    width: 100%;\\n    height: 200px;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n}\\n.mat-card-act{\\n    padding-left: 15px;\\n}\\n/* Absolute Center Spinner */\\n.loading-indicator {\\n    position: fixed;\\n    z-index: 999;\\n    height: 2em;\\n    width: 2em;\\n    overflow: show;\\n    margin: auto;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n  }\\n/* Transparent Overlay */\\n.loading-indicator:before {\\n    content: '';\\n    display: block;\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-color: rgba(0,0,0,0.3);\\n  }\\n.header-image {\\n    background-image: url('https://images.unsplash.com/photo-1516594798947-e65505dbb29d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80');\\n    background-size: cover;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvYnV5ZXIvYnV5ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFHQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLGdCQUFnQjtBQUNwQjtBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2QjtBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHFCQUFxQixFQUFFLHdDQUF3QztJQUMvRCxlQUFlO0lBQ2Ysc0JBQW1CO09BQW5CLG1CQUFtQjtJQUNuQixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixjQUFjO0lBQ2QsT0FBTztJQUNQLFFBQVE7SUFDUixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLFFBQVEsRUFBRSw2REFBNkQ7SUFDdkUsZ0JBQWdCO0lBQ2hCLFdBQVcsRUFBRSx3Q0FBd0M7SUFDckQsZ0JBQWdCO0lBQ2hCLGtGQUFrRjtJQUNsRixXQUFXO0FBQ2Y7QUFDQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2Isb0JBQWlCO09BQWpCLGlCQUFpQjtBQUNyQjtBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBRUEsNEJBQTRCO0FBQzVCO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixXQUFXO0lBQ1gsVUFBVTtJQUNWLGNBQWM7SUFDZCxZQUFZO0lBQ1osTUFBTTtJQUNOLE9BQU87SUFDUCxTQUFTO0lBQ1QsUUFBUTtFQUNWO0FBRUEsd0JBQXdCO0FBQ3hCO0lBQ0UsV0FBVztJQUNYLGNBQWM7SUFDZCxlQUFlO0lBQ2YsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0lBQ1gsWUFBWTtJQUNaLGlDQUFpQztFQUNuQztBQUVBO0lBQ0UsK0pBQStKO0lBQy9KLHNCQUFzQjtFQUN4QiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2J1eWVyL2J1eWVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbn1cbi50YWJsZXtcbiAgICB3aWR0aDoxMDAlO1xufVxuLm1hdEZvcm1GaWVsZHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuLnNpZGUtbmF2YmFyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZWVlO1xufVxuXG5cbi5maWx0ZXItcGFuZWx7XG4gICAgcGFkZGluZy10b3A6IDhweDtcbn1cbi5zZWFyY2gtY2FyZC1ib3h7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uc2VhcmNoLXByb2R1Y3R7XG4gICAgZm9udC1zaXplOiB4LWxhcmdlO1xuICAgIGNvbG9yOiMyMjI7XG59XG5cbi5wcm9kdWN0LWJvZHl7XG4gICAgaGVpZ2h0OiAzMDBweDtcbn1cblxuLnByb2R1Y3QtY2FyZCB7XG4gICAgcGFkZGluZzogMTBweDtcbn1cbi5wcm9kdWN0LWNhcmQtaGVhZGVye1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMnB4O1xufVxuXG4uYm94e1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIE1ha2UgdGhlIHdpZHRoIG9mIGJveCBzYW1lIGFzIGltYWdlICovXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gICAgaGVpZ2h0OiAyMDBweDtcbn1cbi5ib3ggLnRleHR7XG4gICAgaGVpZ2h0OiA1MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDk5OTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xuICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgIHRvcDogNTAlOyAvKiBBZGp1c3QgdGhpcyB2YWx1ZSB0byBtb3ZlIHRoZSBwb3NpdGlvbmVkIGRpdiB1cCBhbmQgZG93biAqL1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgd2lkdGg6IDEwMCU7IC8qIFNldCB0aGUgd2lkdGggb2YgdGhlIHBvc2l0aW9uZWQgZGl2ICovXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDI1NSwyNTUsMjU1LDApLCByZ2JhKDAsMCwwLDAuNykpO1xuICAgIGNvbG9yOiAjZWVlO1xufVxuLmJveCAudGV4dCAubGFyZ2UtdGV4dHtcbiAgICBmb250LXNpemU6IDI1cHg7XG59XG4uYm94LWltYWdle1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5tYXQtY2FyZC1hY3R7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuXG4vKiBBYnNvbHV0ZSBDZW50ZXIgU3Bpbm5lciAqL1xuLmxvYWRpbmctaW5kaWNhdG9yIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogOTk5O1xuICAgIGhlaWdodDogMmVtO1xuICAgIHdpZHRoOiAyZW07XG4gICAgb3ZlcmZsb3c6IHNob3c7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgfVxuICBcbiAgLyogVHJhbnNwYXJlbnQgT3ZlcmxheSAqL1xuICAubG9hZGluZy1pbmRpY2F0b3I6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC4zKTtcbiAgfVxuXG4gIC5oZWFkZXItaW1hZ2Uge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1MTY1OTQ3OTg5NDctZTY1NTA1ZGJiMjlkP2l4bGliPXJiLTEuMi4xJml4aWQ9ZXlKaGNIQmZhV1FpT2pFeU1EZDkmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz0xNjUwJnE9ODAnKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB9Il19 */\"","module.exports = \"<div class=\\\"loading-indicator\\\" *ngIf=\\\"showSpinner\\\">\\n  <mat-progress-spinner mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-spinner>\\n</div>\\n<div class=\\\"col-md-12\\\">\\n    <div fxFlex class=\\\"search-card-box\\\">\\n      <mat-card>\\n          <div fxLayout=\\\"column\\\">\\n              <div fxFlex>\\n                  <span><i class=\\\"material-icons\\\" style=\\\"color: gray;margin-right: 10px;\\\">search</i></span>\\n                  <span> <input style=\\\"width:80%\\\" class=\\\"search-product\\\" matInput placeholder=\\\"Search Products and Categories\\\" autocomplete=\\\"off\\\"></span>\\n              </div>\\n          </div>\\n      </mat-card>\\n    </div>\\n  </div>\\n    <div class=\\\"filter-panel col-md-3\\\">\\n        <mat-accordion class=\\\"\\\">\\n            <mat-expansion-panel>\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                  Filters\\n                </mat-panel-title>\\n                <mat-panel-description>\\n                  Basic\\n                </mat-panel-description>\\n              </mat-expansion-panel-header>\\n              <div fxLayout=\\\"column\\\">\\n                  <div fxFlex>\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Brand Name\\\">\\n                      </mat-form-field>\\n                  </div>\\n                  <div fxFlex>\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Color\\\">\\n                      </mat-form-field>\\n                  </div>\\n                  <div fxFlex>\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Material\\\">\\n                      </mat-form-field>\\n                  </div>\\n              </div>\\n              \\n              \\n            </mat-expansion-panel>\\n            <mat-expansion-panel>\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                  Filters\\n                </mat-panel-title>\\n                <mat-panel-description>\\n                  Advance\\n                </mat-panel-description>\\n              </mat-expansion-panel-header>\\n              <div fxLayout=\\\"column\\\">\\n                  <div fxFlex>\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Price Range\\\">\\n                      </mat-form-field>\\n                  </div>\\n                  <div fxFlex>\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Ratings\\\">\\n                      </mat-form-field>\\n                  </div>\\n                  <div fxFlex>\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Price Range\\\">\\n                      </mat-form-field>\\n                  </div>\\n              </div>\\n            </mat-expansion-panel>\\n          </mat-accordion>\\n    </div>\\n    <div class=\\\"col-md-9 breadcrumb\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n            <div fxFlex class=\\\"product-card-header\\\">\\n              <mat-card>\\n                  <mat-card-title>Categories</mat-card-title>\\n                  <mat-card-subtitle>\\n                    \\n                      <mat-chip-list>\\n                          <mat-chip color=\\\"accent\\\" *ngFor=\\\"let cat of categoriesDataSource\\\" selected>{{cat.name}}</mat-chip>\\n                        </mat-chip-list>\\n                  </mat-card-subtitle>\\n              </mat-card>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\" *ngFor=\\\"let item of productDataSource\\\">\\n                    <mat-card class=\\\"product-card-header\\\">\\n                        <mat-card-header>\\n                          <mat-card-title>{{item.name}}</mat-card-title>\\n                          <mat-card-subtitle>20% Discount</mat-card-subtitle>\\n                        </mat-card-header>\\n                        <div>\\n                          <img [src]=\\\"item.image\\\" alt=\\\"Photo\\\" style=\\\"width:100%;\\\">\\n                        </div>\\n                        <mat-card-content>\\n                          <p>{{item.description}}</p>\\n                        </mat-card-content>\\n                        <mat-card-actions>\\n                          <button mat-button>Wishlist</button>\\n                          <button mat-button>Cart</button>\\n                          <button mat-button (click)=\\\"quickview(item)\\\">Quick View</button>\\n                        </mat-card-actions>\\n                      </mat-card>\\n            </div>\\n        </div> -->\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4\\\" *ngFor=\\\"let item of productDataSource\\\">\\n              <mat-card class=\\\"product-card-header\\\">\\n                  <div class=\\\"box\\\" (click)=\\\"quickview(item)\\\">\\n                      <img class=\\\"box-image\\\" style=\\\"width:100%\\\" [src]=\\\"item.image\\\" alt=\\\"Photo\\\">\\n                         <div class=\\\"text\\\">\\n                          <p class=\\\"large-text\\\">{{item.name}}</p>\\n                          <p>{{item.description}}</p>\\n                        </div>\\n                  </div>\\n                  <div>\\n                    <button mat-button>Wishlist</button>\\n                    <button mat-button>Cart</button>\\n                    <button mat-button (click)=\\\"quickview(item)\\\">Quick View</button>\\n                  </div>\\n                </mat-card>\\n      </div>\\n  </div>\\n      </div>\\n \\n        <!-- <div fxFlex>   \\n          <div fxLayout=\\\"row\\\">\\n              <div fxFlex>\\n                  <mat-paginator [length]=\\\"tableLength\\\"\\n                    [pageSize]=\\\"tablePageSize\\\"\\n                    [pageSizeOptions]=\\\"tablePageSizeOptions\\\"\\n                    (page)=\\\"pageEvent = $event\\\">\\n                  </mat-paginator>\\n              </div>\\n            </div>\\n        </div> -->\"","import {Component} from '@angular/core';\nimport {RestService} from '../../app.service';\nimport {Observable, throwError } from 'rxjs';\nimport {HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {MatSnackBar} from '@angular/material';\nimport {MatTableDataSource, PageEvent} from '@angular/material';\nimport { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\nimport {Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\nexport interface PeriodicElement {\n  id: number,\n  name: string;\n  description: String;\n  price: number;\n  category: string;\n}\n\n@Component({\n  selector: 'product-root',\n  templateUrl: './buyer.component.html',\n  styleUrls: ['./buyer.component.css']\n})\n\n\nexport class ListComponent {\n  title = 'Catalog';\n  answer: string = '';\n  itemsDataSource = [{color: 'lightblue'},{color: 'lightgreen'},{color: 'lightpink'},{color: '#DDBDF1'}];\n  productDataSource: any[] = [];\n  categoriesDataSource: any[] = [];\n\n  /* Product Variables */\n  productName: string = '';\n  productDescription: string = '';\n  productPrice: number;\n  productCategory: string = '';\n\n  /* Category Variables */\n  categoryName: string = '';\n  categoryDescription: string = '';\n  categoryDataSource: any = [];\n  \n  showSpinner: boolean = false;\n\n  // Grocery\n  groceryImages : string[] = [\n    // 'https://images.unsplash.com/photo-1516594798947-e65505dbb29d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',\n  'https://images.unsplash.com/photo-1508928807352-24a4adbb6795?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',\n  'https://images.unsplash.com/photo-1498579397066-22750a3cb424?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',\n  'https://images.unsplash.com/photo-1463490093487-b0ffe9b8e140?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',\n  'https://images.unsplash.com/photo-1534483509719-3feaee7c30da?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',\n  'https://images.unsplash.com/photo-1540289917366-db90f08d2397?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2863&q=80',]\n\n\n  //Phone\n  phoneImages : string[] = [\n    'https://images.unsplash.com/photo-1541345023926-55d6e0853f4b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',\n    'https://images.unsplash.com/photo-1558143396-75d2c4559aad?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',\n    'https://images.unsplash.com/photo-1558562805-4bf1e2a724eb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80']\n\n  //Laptop\n  laptopImages : string[] = [\n    // 'https://images.unsplash.com/photo-1515378960530-7c0da6231fb1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',\n    'https://images.unsplash.com/photo-1484788984921-03950022c9ef?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1704&q=80',\n    'https://images.unsplash.com/photo-1554415707-6e8cfc93fe23?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80',]\n\n\n  /* Product Table Params */\n  displayedColumns: string[] = [ 'category', 'name', 'description', 'price', 'action'];\n  tableLength = 100;\n  tablePageSize = 10;\n  tablePageSizeOptions: number[] = [5, 10, 25, 100];\n  pageEvent: PageEvent;\n\n  constructor(private restService: RestService, private snackBar: MatSnackBar, \n    private router: Router,private authService: AuthService){\n    this.getProduct();\n    this.getCategories();\n  }\n\n  getProduct(){\n    this.showSpinner = true;\n    this.restService.get('product').subscribe((data : any) => {\n      this.productDataSource = data;\n      \n      this.productDataSource.forEach( (item, index) => {\n        let catg : string = item.category;\n        \n        if(catg.toLowerCase()==\"grocery\"){\n          item.image = this.groceryImages[index%this.groceryImages.length];\n        } else if(catg.toLowerCase()==\"laptop\"){\n          item.image = this.laptopImages[index%this.laptopImages.length];\n        }else if(catg.toLowerCase()==\"mobile\"){\n          item.image = this.phoneImages[index%this.phoneImages.length];\n        }else{\n          item.image = this.groceryImages[0];\n        }\n      })\n      this.showSpinner = false;\n      console.log(this.productDataSource);\n    }); \n  }\n\n  getCategories(){\n    this.restService.get('categories').subscribe((data : any) => {\n      this.categoriesDataSource = data;\n    }); \n  }\n\n  quickview(item){\n    this.router.navigate(['product', item.id]);\n  }\n\n}","module.exports = \"<div class=\\\"col-md-12\\\">\\n  <div fxFlex class=\\\"search-card-box\\\">\\n    <mat-card>\\n        <div fxLayout=\\\"column\\\">\\n            <div fxFlex>\\n                <span><i class=\\\"material-icons\\\" style=\\\"color: gray;margin-right: 10px;\\\">shopping_cart</i></span>\\n                <span class=\\\"search-product\\\">Shopping Cart</span>\\n                <span class=\\\"search-product\\\" style=\\\"float:right;\\\"><button mat-raised-button color=\\\"primary\\\">Proceed to buy</button></span>\\n            </div>\\n        </div>\\n    </mat-card>\\n  </div>\\n</div>\\n<div class=\\\"col-md-12\\\">\\n  <div class=\\\"container breadcrumb\\\">\\n    <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\" *ngFor=\\\"let item of productDataSource\\\">\\n              <mat-card style=\\\"margin-bottom: 20px;\\\">\\n                  <mat-card-header>\\n                    <div mat-card-avatar style=\\\"width:100px;height: 100px;\\\" class=\\\"header-image\\\"></div>\\n                    <mat-card-title>{{item.name}}</mat-card-title>\\n                    <mat-card-subtitle>{{item.description}}</mat-card-subtitle>\\n                    <mat-card-subtitle>Rs. 10,000</mat-card-subtitle>\\n                  </mat-card-header>\\n              </mat-card>\\n        </div>\\n    </div>\\n</div>\\n</div>\"","import {Component} from '@angular/core';\nimport {RestService} from '../../app.service';\nimport {Observable, throwError } from 'rxjs';\nimport {HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {MatSnackBar} from '@angular/material';\nimport {MatTableDataSource, PageEvent} from '@angular/material';\nimport { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\nimport {Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n@Component({\n  selector: 'cart-root',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./buyer.component.css']\n})\n\n\nexport class CartComponent {\n  title = 'Catalog';\n  answer: string = '';\n  itemsDataSource = [{color: 'lightblue'},{color: 'lightgreen'},{color: 'lightpink'},{color: '#DDBDF1'}];\n  productDataSource: any[] = [];\n  categoriesDataSource: any[] = [];\n\n  /* Product Variables */\n  productName: string = '';\n  productDescription: string = '';\n  productPrice: number;\n  productCategory: string = '';\n\n  /* Category Variables */\n  categoryName: string = '';\n  categoryDescription: string = '';\n  categoryDataSource: any = [];\n  \n\n  answerDisplay: string = '';\n  showSpinner: boolean = false;\n\n  /* Product Table Params */\n  displayedColumns: string[] = [ 'category', 'name', 'description', 'price', 'action'];\n  tableLength = 100;\n  tablePageSize = 10;\n  tablePageSizeOptions: number[] = [5, 10, 25, 100];\n  pageEvent: PageEvent;\n\n  constructor(private restService: RestService, private snackBar: MatSnackBar, \n    private router: Router,private authService: AuthService){\n    this.getProduct();\n    this.getCategories();\n    console.log(this.authService.getUserInfo())\n  }\n\n  getProduct(){\n    this.restService.get('product').subscribe((data : any) => {\n      this.productDataSource = data;\n    }); \n  }\n\n  getCategories(){\n    this.restService.get('categories').subscribe((data : any) => {\n      this.categoriesDataSource = data;\n    }); \n  }\n\n  quickview(item){\n    this.router.navigate(['product', item.id]);\n  }\n\n}","module.exports = \"    <div class=\\\"filter-panel col-md-3\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div fxFlex class=\\\"product-card-header\\\">\\n                <mat-card>\\n                    <!-- <mat-card-title>Categories</mat-card-title> -->\\n                    <mat-card-subtitle>\\n                        {{productName}}\\n                    </mat-card-subtitle>\\n                </mat-card>\\n              </div>\\n            </div>\\n          </div>\\n        <mat-card class=\\\"product-card-header\\\">\\n            <img mat-card-image src=\\\"https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1V2VvP0Bc_hsTGx3rtlMZDDBYYtBwuTQ-%2Fgridlist-illos-01.png\\\" alt=\\\"Photo\\\">\\n            <mat-card-content>\\n            </mat-card-content>\\n            <mat-card-actions>\\n              <!-- <button mat-button><i class=\\\"material-icons\\\">shopping_cart</i></button> -->\\n              <button mat-button><i class=\\\"material-icons\\\">zoom_in</i></button>\\n              <button mat-button><i class=\\\"material-icons\\\">zoom_out</i></button>\\n            </mat-card-actions>\\n          </mat-card>\\n    </div>\\n    <div class=\\\"col-md-9 breadcrumb\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div fxFlex class=\\\"product-card-header\\\">\\n            <mat-card>\\n                <!-- <mat-card-title>Categories</mat-card-title> -->\\n                <mat-card-subtitle>\\n                    Offers!!\\n                </mat-card-subtitle>\\n            </mat-card>\\n          </div>\\n        </div>\\n      </div>\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 product-card-header\\\">\\n                  <mat-card class=\\\"product-body\\\">\\n                      <!-- <mat-card-title>Categories</mat-card-title> -->\\n                      <mat-card-subtitle>\\n                          {{productDescription}}\\n                      </mat-card-subtitle>\\n                  </mat-card>\\n                </div>\\n                <div class=\\\"col-md-6 product-card-header\\\">\\n                    <mat-card class=\\\"product-body\\\">\\n                        <!-- <mat-card-title>Categories</mat-card-title> -->\\n                        <mat-card-subtitle>\\n                            <p>Product Purchase Options/ Delivery Options</p>\\n                        </mat-card-subtitle>\\n                    </mat-card>\\n                  </div>  \\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div fxFlex class=\\\"product-card-header\\\">\\n                <mat-card>\\n                    <!-- <mat-card-title>Categories</mat-card-title> -->\\n                    <mat-card-subtitle>\\n                        Reviews\\n                    </mat-card-subtitle>\\n                </mat-card>\\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n      \\n        <!-- <div fxFlex>   \\n          <div fxLayout=\\\"row\\\">\\n              <div fxFlex>\\n                  <mat-paginator [length]=\\\"tableLength\\\"\\n                    [pageSize]=\\\"tablePageSize\\\"\\n                    [pageSizeOptions]=\\\"tablePageSizeOptions\\\"\\n                    (page)=\\\"pageEvent = $event\\\">\\n                  </mat-paginator>\\n              </div>\\n            </div>\\n        </div> -->\"","import {Component, OnInit} from '@angular/core';\nimport {RestService} from '../../app.service';\nimport {Observable, throwError } from 'rxjs';\nimport {HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {MatSnackBar} from '@angular/material';\nimport {MatTableDataSource, PageEvent} from '@angular/material';\nimport { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'product-root',\n  templateUrl: './product.details.component.html',\n  styleUrls: ['./buyer.component.css']\n})\n\n\nexport class ProductDetailsComponent implements OnInit{\n  title = 'Catalog';\n\n  /* Product Variables */\n  productName: string = '';\n  productDescription: string = '';\n  productPrice: number;\n  productCategory: string = '';\n\n  answerDisplay: string = '';\n  showSpinner: boolean = false;\n\n  /* Product Table Params */\n  displayedColumns: string[] = [ 'category', 'name', 'description', 'price', 'action'];\n  tableLength = 100;\n  tablePageSize = 10;\n  tablePageSizeOptions: number[] = [5, 10, 25, 100];\n  pageEvent: PageEvent;\n\n  constructor(private restService: RestService, private snackBar: MatSnackBar, private activatedRoute: ActivatedRoute){\n    // this.getProduct();\n    // this.getCategories();\n  }\n\n  ngOnInit(){\n    let id = parseInt(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.getProduct(id);\n  }\n  getProduct(id){\n    this.restService.get('product/' + id).subscribe((data : any) => {\n      this.productName = data.name;\n      this.productDescription = data.description;\n      this.productCategory = data.category;\n      \n    }); \n  }\n\n}","module.exports = \".login-element > * {\\n    width: 100%;\\n}\\n.login-container {\\n    margin-top: 80px;\\n    padding: 40px;\\n}\\n.login-button-container {\\n    margin-top: 20px;\\n}\\n.login-button {\\n    width : 100%;\\n    margin-right: 20px;\\n}\\n.login-background{\\n    background: lavender;\\n    height: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7QUFDakI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWVsZW1lbnQgPiAqIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cbi5sb2dpbi1jb250YWluZXIge1xuICAgIG1hcmdpbi10b3A6IDgwcHg7XG4gICAgcGFkZGluZzogNDBweDtcbn1cbi5sb2dpbi1idXR0b24tY29udGFpbmVyIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuLmxvZ2luLWJ1dHRvbiB7XG4gICAgd2lkdGggOiAxMDAlO1xuICAgIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLmxvZ2luLWJhY2tncm91bmR7XG4gICAgYmFja2dyb3VuZDogbGF2ZW5kZXI7XG4gICAgaGVpZ2h0OiAzMDBweDtcbn0iXX0= */\"","module.exports = \"<div class=\\\"login-background\\\">\\n<div class=\\\"container\\\">\\n    <div class=\\\"col-md-4\\\"></div>\\n    <div class=\\\"col-md-4\\\" >\\n        \\n      <mat-card class=\\\"login-container\\\">\\n          \\n          <div fxLayout=\\\"column\\\">\\n              <i class=\\\"material-icons\\\" style=\\\"font-size: 80px;text-align: center;color:grey\\\">account_circle</i>\\n              <div fxFlex class=\\\"login-element\\\">\\n                  \\n                  <mat-form-field class=\\\"matFormField\\\" width=\\\"100%\\\">\\n                    <input matInput [(ngModel)]=\\\"email\\\" placeholder=\\\"Email\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div fxFlex class=\\\"login-element\\\">\\n                  <mat-form-field class=\\\"matFormField\\\">\\n                      <input type=\\\"password\\\" matInput [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div fxFlex class=\\\"login-button-container\\\">\\n                    <div fxLayout=\\\"row\\\">\\n                  <div fxFlex><button class=\\\"login-button\\\" mat-raised-button color=\\\"primary\\\" id=\\\"googleBtn\\\" (click)=\\\"login()\\\">Login</button></div>\\n                  <div fxFlex><div class=\\\"g-signin2\\\" data-onsuccess=\\\"onSignIn\\\"></div></div>\\n                  </div>\\n              </div>             \\n              <div fxFlex class=\\\"login-button-container\\\">\\n                  <button class=\\\"login-button\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"signup()\\\">SIGNUP</button>\\n              </div>\\n          </div>\\n      </mat-card>\\n    </div>\\n</div>\\n</div>\"","import {Component} from '@angular/core';\nimport {RestService} from '../../app.service';\nimport {Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material';\nimport { AuthService } from 'src/app/services/auth.service';\n\ndeclare const gapi: any;\n\n@Component({\n  selector: 'login-root',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent {\n  title = 'Facebook';\n  \n  public email:string;\n  public password:string;\n\n  constructor(private router: Router, private snackBar: MatSnackBar, \n    private restService: RestService, private authService: AuthService){}\n\n    ngAfterViewInit() {\n      gapi.signin2.render('my-signin2', {\n          'scope': 'profile email',\n          'width': 240,\n          'height': 50,\n          'longtitle': true,\n          'theme': 'light',\n          'onsuccess': param => this.onSignIn(param)\n      });\n  }\n\n  login(){\n    let user = {};\n    user['email'] = this.email;\n    user['password'] = this.password;\n    this.restService.post('login', user).subscribe((data : any) => {\n      if(data.status === \"success\"){\n        let obj = {'id' : '', 'name' : `${data.data.fname} ${data.data.lname}`, 'image_url': 'default.jpg', 'email': this.email};\n        console.log(obj)\n        this.authService.setLoggedInState(obj);\n        this.router.navigate(['home']);\n      }else{\n        this.snackBar.open('Unable to login!', 'ERROR', {\n          duration: 2000,\n        });\n      }\n    }, error => {\n      this.snackBar.open('Unable to login!', 'ERROR', {\n        duration: 2000,\n      });\n    });\n\n    \n  }\n\n  signup(){\n    console.log(this.email,this.password);\n    this.router.navigate(['register']);\n  }\n\n\n  onSignIn(googleUser) {\n    var profile = googleUser.getBasicProfile();\n    let obj = {'id' : profile.getId(), 'name' : profile.getName(), 'image_url': profile.getImageUrl(), 'email': profile.getEmail()};\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n    // The ID token you need to pass to your backend:\n    var id_token = googleUser.getAuthResponse().id_token;\n    console.log(\"ID Token: \" + id_token);\n\n    this.authService.setLoggedInState(obj);\n    this.router.navigate(['home']);\n  }\n}","module.exports = \"<div class=\\\"login-background\\\">\\n<div class=\\\"container\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\" >\\n        \\n      <mat-card class=\\\"login-container\\\">\\n          \\n          <div fxLayout=\\\"column\\\">\\n              <i class=\\\"material-icons\\\" style=\\\"font-size: 80px;text-align: center;color:grey\\\">account_circle</i>\\n              <div fxFlex class=\\\"login-element\\\">\\n                  \\n                  <mat-form-field class=\\\"matFormField\\\" width=\\\"100%\\\">\\n                    <input matInput [(ngModel)]=\\\"fname\\\" placeholder=\\\"First Name\\\" required>\\n                  </mat-form-field>\\n              </div>\\n              <div fxFlex class=\\\"login-element\\\">\\n                  <mat-form-field class=\\\"matFormField\\\">\\n                    <input matInput [(ngModel)]=\\\"lname\\\" placeholder=\\\"Last Name\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div fxFlex class=\\\"login-element\\\">\\n                    <mat-form-field class=\\\"matFormField\\\" width=\\\"100%\\\">\\n                        <input matInput [(ngModel)]=\\\"email\\\" placeholder=\\\"Email\\\" required>\\n                    </mat-form-field>\\n              </div>\\n              <div fxFlex class=\\\"login-element\\\">\\n                    <mat-form-field class=\\\"matFormField\\\" width=\\\"100%\\\">\\n                        <input type=\\\"password\\\" matInput [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n                    </mat-form-field>\\n              </div>\\n              <div fxFlex class=\\\"login-element\\\">\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date of Birth\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              <div fxFlex class=\\\"login-button-container\\\">\\n                  <button class=\\\"login-button\\\" mat-raised-button color=\\\"primary\\\" id=\\\"googleBtn\\\" (click)=\\\"signup()\\\">SUBMIT</button>\\n              </div>\\n          </div>\\n      </mat-card>\\n    </div>\\n</div>\\n</div>\"","import {Component} from '@angular/core';\nimport {RestService} from '../../app.service';\nimport {Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'login-root',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class SignupComponent {\n  title = 'Facebook';\n  \n  public email:string;\n  public password:string;\n  public fname:string;\n  public lname:string;\n\n  constructor(private router: Router, private snackBar: MatSnackBar, private restService: RestService, private authService: AuthService){}\n\n  signup(){\n    let user = {};\n    user['email'] = this.email;\n    user['password'] = this.password;\n    user['fname'] = this.fname;\n    user['lname'] = this.lname;\n    user['image_file'] = \"default.jpg\";\n    this.restService.post('register', user).subscribe((data : any) => {\n      if(data.status === \"success\"){\n        this.authService.setLoggedInState(true);\n        this.router.navigate(['login']);\n      }else{\n        this.snackBar.open('Unable to register user!', 'ERROR', {\n          duration: 2000,\n        });\n      }\n    }, error => {\n      this.snackBar.open('Unable to register user!', 'ERROR', {\n        duration: 2000,\n      });\n    });\n    \n  }\n}","module.exports = \".card{\\n    padding-top: 10px;\\n    padding-bottom: 10px;\\n}\\n.table{\\n    width:100%;\\n}\\n.matFormField{\\n    padding-right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2VsbGVyL3Byb2R1Y3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2VsbGVyL3Byb2R1Y3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xufVxuLnRhYmxle1xuICAgIHdpZHRoOjEwMCU7XG59XG4ubWF0Rm9ybUZpZWxke1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG59Il19 */\"","module.exports = \"<div style=\\\"background:#eee;height: -webkit-fill-available;\\\">\\n<div class=\\\"container\\\">\\n<div class=\\\"col-md-12 card\\\">\\n<mat-card>\\n    <div fxLayout=\\\"row\\\">\\n        <div fxFlex>\\n          <h4>Add Items</h4>\\n        </div>\\n    </div>\\n    <div fxLayout=\\\"row\\\">\\n        <div fxFlex>\\n            <mat-form-field class=\\\"matFormField\\\">\\n              <mat-select (selectionChange)=\\\"selectProduct($event.value)\\\" placeholder=\\\"Product Category\\\" name=\\\"Category\\\" [(ngModel)]=\\\"selectedCategory\\\">\\n                <mat-option *ngFor=\\\"let cat of categoryDataSource\\\" [value]=\\\"cat\\\">{{cat.name}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"matFormField\\\">\\n                <mat-select placeholder=\\\"Product Name\\\" name=\\\"Category\\\" [(ngModel)]=\\\"selectedProduct\\\">\\n                  <mat-option *ngFor=\\\"let prod of productDataSource\\\" [value]=\\\"prod\\\">{{prod.name}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            <mat-form-field class=\\\"matFormField\\\">\\n                <input type=\\\"number\\\" matInput [(ngModel)]=\\\"selectedQuantity\\\" placeholder=\\\"Product Quantity\\\">\\n              </mat-form-field>\\n            <mat-form-field class=\\\"matFormField\\\">\\n                <input type=\\\"number\\\" matInput [(ngModel)]=\\\"selectedPrice\\\" placeholder=\\\"Product Price\\\">\\n            </mat-form-field>\\n            <span>\\n              <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"createItem()\\\">ADD</button>\\n              <button mat-raised-button color=\\\"accent\\\" (click)=\\\"getItem()\\\">GET</button>\\n            </span>\\n        </div>\\n    </div>\\n</mat-card>\\n</div>\\n<!-- <div class=\\\"col-md-6 card\\\">\\n  <mat-card>\\n    \\n    <br>\\n    <button mat-raised-button (click)=\\\"showAnswer()\\\">Answer me</button>\\n    <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\n  </mat-card>\\n  </div>\\n  <div class=\\\"col-md-6 card\\\">\\n    <mat-card>\\n      <br>\\n      <button mat-raised-button (click)=\\\"showAnswer()\\\">Answer me</button>\\n      <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\n    </mat-card>\\n  </div> -->\\n  <div class=\\\"col-md-12 card\\\">\\n  <mat-card>\\n    \\n    <!-- <div fxLayout=\\\"row\\\">\\n        <div fxFlex>\\n          <h4>Saved Items</h4>\\n          <span><mat-spinner [diameter]=\\\"20\\\" [strokeWidth]=\\\"2\\\" [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner></span>\\n        </div>\\n    </div>\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search All\\\">\\n    </mat-form-field> -->\\n\\n  <table mat-table [dataSource]=\\\"itemDataSource\\\" class=\\\"mat-elevation-z8\\\" class=\\\"table\\\">\\n\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"category\\\">\\n        <th mat-header-cell *matHeaderCellDef> Category </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"product\\\">\\n        <th mat-header-cell *matHeaderCellDef> Product </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.product}} </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"quantity\\\">\\n        <th mat-header-cell *matHeaderCellDef> Quantity </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.quantity}} </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"price\\\">\\n        <th mat-header-cell *matHeaderCellDef> Price </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef> </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <i class=\\\"material-icons\\\" style=\\\"cursor: pointer\\\" (click)=\\\"deleteProduct(element.id)\\\">delete</i>\\n          <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"editProduct(element.id)\\\">EDIT</button> \\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteProduct(element.id)\\\">DELETE</button>  -->\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n    <div fxLayout=\\\"row\\\">\\n        <div fxFlex>\\n            <mat-paginator [length]=\\\"tableLength\\\"\\n              [pageSize]=\\\"tablePageSize\\\"\\n              [pageSizeOptions]=\\\"tablePageSizeOptions\\\"\\n              (page)=\\\"pageEvent = $event\\\">\\n            </mat-paginator>\\n        </div>\\n      </div>\\n  </mat-card>\\n\\n  \\n  </div>\\n</div>\\n</div>\"","import {Component} from '@angular/core';\nimport {RestService} from '../../app.service';\nimport {Observable, throwError } from 'rxjs';\nimport {HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {MatSnackBar} from '@angular/material';\nimport {MatTableDataSource, PageEvent} from '@angular/material';\n\nexport interface PeriodicElement {\n  id: number,\n  name: string;\n  description: String;\n  price: number;\n  category: string;\n}\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n\n@Component({\n  selector: 'product-root',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\n\n\nexport class ProductComponent {\n  title = 'Facebook';\n  answer: string = '';\n\n  /* API Variables */\n  productDataSource: any = [];\n  categoryDataSource: any = [];\n  itemDataSource: any = [];\n  /* Selection Variables */\n  selectedCategory: any;\n  selectedProduct: any;\n  selectedQuantity: number;\n  selectedPrice:number;\n  \n  /* Random Variables */\n  answerDisplay: string = '';\n  showSpinner: boolean = false;\n\n  /* Item Table Params */\n  displayedColumns: string[] = [ 'category', 'product', 'quantity', 'price', 'action'];\n \n  tableLength = 100;\n  tablePageSize = 10;\n  tablePageSizeOptions: number[] = [5, 10, 25, 100];\n  pageEvent: PageEvent;\n\n  constructor(private restService: RestService, private snackBar: MatSnackBar){\n    this.getProduct();\n    this.getCategory();\n    this.getItem();\n  }\n\n  applyFilter(filterValue: string) {\n    this.productDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  selectProduct(filterValue: string) {\n  }\n\n  \n\n  getCategory() {\n    this.restService.get('categories').subscribe((data : any) => {\n      //this.categoryDataSource = new MatTableDataSource(data);\n      this.categoryDataSource = data;\n    }); \n  }\n\n\n  getItem(){\n    this.restService.get('items').subscribe((data : any) => {\n      this.itemDataSource = new MatTableDataSource(data);\n      this.itemDataSource = data;\n    }); \n  }\n\n\n  getProduct(){\n    this.restService.get('product').subscribe((data : any) => {\n      this.productDataSource = new MatTableDataSource(data);\n      this.productDataSource = data;\n    }); \n  }\n\n  createItem(){\n    let prod = {};\n    prod['product_id'] = this.selectedProduct['id'];\n    prod['category_id'] = this.selectedCategory['id'];\n    prod['price'] = Number(this.selectedPrice);\n    prod['quantity'] = Number(this.selectedQuantity);\n    prod['user_id'] = 1;\n    \n    this.restService.post('items',prod).subscribe((res: any) => {\n      if(res.status==='success'){\n        this.getItem();\n        this.selectedProduct = null;\n        this.selectedCategory = null;\n        this.selectedPrice = null;\n        this.selectedQuantity = null;\n      }else{\n        //this.productService.setToastMessage('Error Saving Product! : ' + res.message);\n        this.snackBar.open(res.message, 'ERROR', {\n          duration: 2000,\n        });\n      }\n    });\n  }\n  \n  deleteItem(id : String){\n    this.restService.delete('item', id).subscribe((res: any) => {\n      this.getProduct();\n    });\n  }\n\n  showAnswer() {\n    \n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  urlAddress: 'http://localhost:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}